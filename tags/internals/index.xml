<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Internals on angr</title>
    <link>https://angr.github.io/tags/internals/</link>
    <description>Recent content in Internals on angr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Jan 2018 18:51:25 -0800</lastBuildDate>
    
	<atom:link href="https://angr.github.io/tags/internals/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>throwing a tantrum, part 1: angr internals</title>
      <link>https://angr.github.io/blog/throwing_a_tantrum_part_1/</link>
      <pubDate>Thu, 18 Jan 2018 18:51:25 -0800</pubDate>
      
      <guid>https://angr.github.io/blog/throwing_a_tantrum_part_1/</guid>
      <description>In this n+1-part series, we will be exploring how you can extend angr with new features, without editing angr itself!
angr is the popular framework for analyzing binary programs, from embedded firmware, to hardcore CTF challenges, all from the comfort of Python. angr&amp;rsquo;s roots lie in the Valgrind VEX instrumentation framework, meaning it benefits from the multi-architecture support and community maintenance. However, we live in a big world full of crazy things that aren&amp;rsquo;t Intel or ARM-based Linux machines.</description>
    </item>
    
  </channel>
</rss>