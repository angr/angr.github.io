<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Loader on angr</title>
    <link>https://angr.github.io/tags/loader/</link>
    <description>Recent content in Loader on angr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Jan 2018 19:41:02 -0800</lastBuildDate>
    
	<atom:link href="https://angr.github.io/tags/loader/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>throwing a tantrum, part 3: loaders</title>
      <link>https://angr.github.io/blog/throwing_a_tantrum_part_3/</link>
      <pubDate>Thu, 18 Jan 2018 19:41:02 -0800</pubDate>
      
      <guid>https://angr.github.io/blog/throwing_a_tantrum_part_3/</guid>
      <description>Now we&amp;rsquo;re going to focus on the first actual step in the process of analyzing a program: Figuring out what it even is, and loading it into our system&amp;rsquo;s memory somehow.
CLE: CLE Loads Everything The angr suite uses CLE to load binaries. It serves as a logical implementation of the Linux loader first and foremost, but supports other OSes and formats through a series of &amp;ldquo;backends&amp;rdquo;.
CLE is given, by angr, a path to the &amp;ldquo;main binary&amp;rdquo;.</description>
    </item>
    
  </channel>
</rss>